spring.datasource.url=jdbc:mysql://localhost:3306/algafood?createDatabaseIfNotExist=true&serverTimezone=UTC
spring.datasource.username=developer
spring.datasource.password=dev123
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.show-sql=true

spring.flyway.locations=classpath:db/migration,classpath:db/testdata

# propriedade para retornar um erro quando o consumidor da API faz uma requisicao com um JSON contendo uma propriedade inexistente no nosso modelo
spring.jackson.deserialization.fail-on-unknown-properties=true

# propriedade para retornar um erro quando o consumidor da API faz uma requisicao com um JSON contendo uma propriedade ignorada no nosso modelo
spring.jackson.deserialization.fail-on-ignored-properties=true

# propriedades para lancar uma excecao caso nao se tenha um handler mapeado para a url de uma determinada requisicao
spring.mvc.throw-exception-if-no-handler-found=true
spring.web.resources.add-mappings=false
# spring.resources.add-mappings=false --> em aula o prefessor utilizou esta propriedade. Mas na versao que eu usei do Spring, ela esta deprecada

# As configuracoes abaixo geram os scripts para criacao do schema conforme os modelos implementados utilizando o JPA
# e armazena no arquivo 'src/main/resources/ddl.sql'. Lembrando que apenas geram os scripts, mas nao os executam
# Apos a criacao do DDL, devemos comentar os comandos abaixo, pois so precisamos deles uma unica vez
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=src/main/resources/ddl.sql
